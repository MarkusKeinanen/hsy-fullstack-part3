{"version":3,"sources":["services/persons.js","Notification.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","delete","put","Notification","message","classString","className","FormFilter","filter","setFilter","value","onChange","e","currentTarget","PersonForm","newName","setNewName","newNumber","setNewNumber","addPerson","onSubmit","type","PersonsList","persons","deletePerson","p","filterLower","toLowerCase","name","includes","number","map","person","key","style","display","onClick","App","useState","setPersons","visible","notification","setNotification","useEffect","personService","notify","setTimeout","preventDefault","existing","find","undefined","window","confirm","newPerson","returnedPerson","catch","err","error","concat","target","newPersons","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b2f8abce.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\nconst baseUrl = !process.env.NODE_ENV || process.env.NODE_ENV === 'development' ? 'http://localhost:3001/api/persons' : '/api/persons'\r\n\r\nconst getAll = () => {\r\n\tconst req = axios.get(baseUrl)\r\n\treturn req.then((response) => response.data)\r\n}\r\n\r\nconst create = (newObject) => {\r\n\tconst req = axios.post(baseUrl, newObject)\r\n\treturn req.then((response) => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n\tconst req = axios.put(baseUrl + `/${id}`, newObject)\r\n\treturn req.then((response) => response.data)\r\n}\r\n\r\nconst deleteId = (id) => {\r\n\tconst req = axios.delete(baseUrl + `/${id}`)\r\n\treturn req.then((response) => response.data)\r\n}\r\n\r\nexport default {\r\n\tgetAll,\r\n\tcreate,\r\n\tdelete: deleteId,\r\n\tupdate: update\r\n}\r\n","import React from 'react'\r\n\r\nconst Notification = ({ message, classString }) => {\r\n\tif (message === null) {\r\n\t\treturn null\r\n\t}\r\n\treturn <div className={`notification ${classString}`}>{message}</div>\r\n}\r\n\r\nexport default Notification\r\n","import React, { useState, useEffect } from 'react'\r\nimport personService from './services/persons'\r\nimport Notification from './Notification'\r\n\r\nconst FormFilter = ({ filter, setFilter }) => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\tfilter shown with\r\n\t\t\t<input value={filter} onChange={(e) => setFilter(e.currentTarget.value)} />\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nconst PersonForm = ({ newName, setNewName, newNumber, setNewNumber, addPerson }) => {\r\n\treturn (\r\n\t\t<form onSubmit={addPerson}>\r\n\t\t\t<div>\r\n\t\t\t\tname:\r\n\t\t\t\t<input value={newName} onChange={(e) => setNewName(e.currentTarget.value)} />\r\n\t\t\t\t<br></br>\r\n\t\t\t\tnumber:\r\n\t\t\t\t<input value={newNumber} onChange={(e) => setNewNumber(e.currentTarget.value)} />\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<button type='submit'>add</button>\r\n\t\t\t</div>\r\n\t\t</form>\r\n\t)\r\n}\r\n\r\nconst PersonsList = ({ persons, filter, deletePerson }) => {\r\n\treturn persons\r\n\t\t.filter((p) => {\r\n\t\t\tlet filterLower = filter.toLowerCase()\r\n\t\t\treturn p.name.toLowerCase().includes(filterLower) || p.number.toLowerCase().includes(filterLower)\r\n\t\t})\r\n\t\t.map((person) => {\r\n\t\t\treturn (\r\n\t\t\t\t<div key={person.name}>\r\n\t\t\t\t\t<p style={{ display: 'inline-block' }}>\r\n\t\t\t\t\t\t{person.name} {person.number}\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t<button onClick={() => deletePerson(person)}>delete</button>\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t})\r\n}\r\n\r\nconst App = () => {\r\n\tconst [persons, setPersons] = useState(null)\r\n\tconst [filter, setFilter] = useState('')\r\n\tconst [newName, setNewName] = useState('')\r\n\tconst [newNumber, setNewNumber] = useState('')\r\n\tconst [notification, setNotification] = useState({ visible: false, message: '', classString: 'success' })\r\n\r\n\tuseEffect(() => {\r\n\t\tpersonService.getAll().then((persons) => {\r\n\t\t\tsetPersons(persons)\r\n\t\t})\r\n\t}, [])\r\n\r\n\tconst notify = (notification) => {\r\n\t\tsetNotification({ ...notification, visible: true })\r\n\t\tsetTimeout(() => {\r\n\t\t\tsetNotification({ visible: false })\r\n\t\t}, 5000)\r\n\t}\r\n\r\n\tconst addPerson = (e) => {\r\n\t\te.preventDefault()\r\n\t\tlet existing = persons.find((p) => p.name.toLowerCase() === newName.toLowerCase())\r\n\t\tif (existing !== undefined) {\r\n\t\t\tif (!window.confirm(`${newName} is already added to phonebook, do you want to replace the old number with a new one?`)) return\r\n\t\t}\r\n\t\tlet newPerson = {\r\n\t\t\tname: newName,\r\n\t\t\tnumber: newNumber\r\n\t\t}\r\n\t\tif (existing) {\r\n\t\t\tpersonService\r\n\t\t\t\t.update(existing.id, newPerson)\r\n\t\t\t\t.then((returnedPerson) => {\r\n\t\t\t\t\tsetPersons(persons.map((p) => (p.id !== existing.id ? p : returnedPerson)))\r\n\t\t\t\t\tnotify({\r\n\t\t\t\t\t\tmessage: `Number updated: ${returnedPerson.name} ${returnedPerson.number}`,\r\n\t\t\t\t\t\tclassString: 'success'\r\n\t\t\t\t\t})\r\n\t\t\t\t})\r\n\t\t\t\t.catch((err) => {\r\n\t\t\t\t\tnotify({\r\n\t\t\t\t\t\tmessage: `Failed to update. Reason: ${err.response.data.error}`,\r\n\t\t\t\t\t\tclassString: 'error'\r\n\t\t\t\t\t})\r\n\t\t\t\t})\r\n\t\t} else {\r\n\t\t\tpersonService\r\n\t\t\t\t.create(newPerson)\r\n\t\t\t\t.then((returnedPerson) => {\r\n\t\t\t\t\tsetPersons(persons.concat(returnedPerson))\r\n\t\t\t\t\tnotify({\r\n\t\t\t\t\t\tmessage: `Person added: ${returnedPerson.name} ${returnedPerson.number}`,\r\n\t\t\t\t\t\tclassString: 'success'\r\n\t\t\t\t\t})\r\n\t\t\t\t})\r\n\t\t\t\t.catch((err) => {\r\n\t\t\t\t\tnotify({\r\n\t\t\t\t\t\tmessage: `Failed to add person. Reason: ${err.response.data.error}`,\r\n\t\t\t\t\t\tclassString: 'error'\r\n\t\t\t\t\t})\r\n\t\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\tconst deletePerson = (target) => {\r\n\t\tif (!window.confirm(`Are you sure you want to delete person ${target.name} ${target.number}?`)) return\r\n\t\tpersonService\r\n\t\t\t.delete(target.id)\r\n\t\t\t.then(() => {\r\n\t\t\t\tlet newPersons = persons.filter((p) => p.id !== target.id)\r\n\t\t\t\tsetPersons(newPersons)\r\n\t\t\t\tnotify({\r\n\t\t\t\t\tmessage: `Person ${target.name} was deleted.`,\r\n\t\t\t\t\tclassString: 'success'\r\n\t\t\t\t})\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tnotify({\r\n\t\t\t\t\tmessage: `Failed to delete - ${target.name} was not found on server`,\r\n\t\t\t\t\tclassString: 'error'\r\n\t\t\t\t})\r\n\t\t\t})\r\n\t}\r\n\r\n\tif (persons === null) return 'Loading data...'\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h2>Phonebook</h2>\r\n\t\t\t{notification.visible && <Notification {...notification} />}\r\n\t\t\t<FormFilter filter={filter} setFilter={setFilter} />\r\n\r\n\t\t\t<h2>Add a new number</h2>\r\n\r\n\t\t\t<PersonForm addPerson={addPerson} newName={newName} setNewName={setNewName} newNumber={newNumber} setNewNumber={setNewNumber} />\r\n\r\n\t\t\t<h2>Numbers</h2>\r\n\t\t\t<PersonsList persons={persons} filter={filter} deletePerson={deletePerson} />\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}